events { 
   worker_connections 20000; 
}
http {
   upstream localhost {
      # These are references to our backend containers, facilitated by
      # Compose, as defined in docker-compose.yml   
      server server1:3001;
      server server2:3001;
      server server3:3001;
   }

   
   server {
      listen 80;
      listen 8000;
      server_name ec2-18-188-90-66.us-east-2.compute.amazonaws.com;
      
      location / {
         if ($server_port = 80) {
            proxy_pass http://localhost:3000;
         }
         if ($server_port = 8000) {
            proxy_pass http://localhost:3001;
         }
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection 'upgrade';
         proxy_set_header Host $host;
         proxy_cache_bypass $http_upgrade;
      }
   }

   # server {
   #    listen 8000;
      
   #    server_name localhost;
   #    location / {
   #       proxy_pass http://localhost;
   #       proxy_http_version 1.1;
   #       proxy_set_header Upgrade $http_upgrade;
   #       proxy_set_header Connection 'upgrade';
   #       proxy_set_header Host $host;
   #       proxy_cache_bypass $http_upgrade;
   #    }
   # }

}

# events { 
#    worker_connections 20000; 
# }
# http {
#    upstream localhost {
#       # These are references to our backend containers, facilitated by
#       # Compose, as defined in docker-compose.yml   
#       server server1:3001;
#       server server2:3001;
#       server server3:3001;
#    }
#    server {
#       listen 8000;
#       server_name localhost;
#       location / {
#          proxy_pass http://localhost;
#          proxy_http_version 1.1;
#          proxy_set_header Upgrade $http_upgrade;
#          proxy_set_header Connection 'upgrade';
#          proxy_set_header Host $host;
#          proxy_cache_bypass $http_upgrade;
#       }
#    }
# }